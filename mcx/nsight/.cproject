<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
	<storageModule moduleId="org.eclipse.cdt.core.settings">
		<cconfiguration id="com.nvidia.cuda.ide.configuration.debug.174618745">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.ide.configuration.debug.174618745" moduleId="org.eclipse.cdt.core.settings" name="Debug">
				<externalSettings/>
				<extensions>
					<extension id="nvcc.errorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.VCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="com.nvidia.cuda.ide.cubin" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.elf" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.macho" point="org.eclipse.cdt.core.BinaryParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug,org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe" cleanCommand="rm -rf" description="" id="com.nvidia.cuda.ide.configuration.debug.174618745" name="Debug" parent="com.nvidia.cuda.ide.configuration.debug">
					<folderInfo id="com.nvidia.cuda.ide.configuration.debug.174618745." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.tools.toolchain.exe.debug.470666483" name="CUDA Toolkit 7.0" resourceTypeBasedDiscovery="true" superClass="com.nvidia.cuda.tools.toolchain.exe.debug">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform.1018412578" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<builder buildPath="${workspace_loc:/mcx}/Debug" id="com.nvidia.cuda.ide.builder.1857430828" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit 7.0 Builder" superClass="com.nvidia.cuda.ide.builder"/>
							<tool id="nvcc.compiler.base.351071117" name="NVCC Compiler" superClass="nvcc.compiler.base">
								<option id="nvcc.compiler.deviceDebug.1802895132" name="Generate device debug information (-G)" superClass="nvcc.compiler.deviceDebug" value="true" valueType="boolean"/>
								<option id="nvcc.compiler.option.level.561750109" name="Generate host debug information (-g)" superClass="nvcc.compiler.option.level" value="true" valueType="boolean"/>
								<option defaultValue="nvcc.compiler.optimization.level.none" id="nvcc.compiler.optimization.level.2043476435" name="Optimization Level" superClass="nvcc.compiler.optimization.level" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.146721316" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic"/>
								<option id="nvcc.compiler.def.symbols.82869931" name="Defined symbols (-D)" superClass="nvcc.compiler.def.symbols" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="USE_ATOMIC"/>
									<listOptionValue builtIn="false" value="SAVE_DETECTORS"/>
									<listOptionValue builtIn="false" value="USE_CACHEBOX"/>
									<listOptionValue builtIn="false" value="MCX_TARGET_NAME=&quot;Fermi MCX&quot;"/>
									<listOptionValue builtIn="false" value="USE_XORSHIFT128P_RAND"/>
								</option>
								<option id="nvcc.compiler.compileroptions.197283701" name="Preprocessor options (-Xcompiler)" superClass="nvcc.compiler.compileroptions" valueType="stringList">
									<listOptionValue builtIn="false" value="-fopenmp"/>
								</option>
								<inputType id="nvcc.compiler.input.cu.1644416546" superClass="nvcc.compiler.input.cu"/>
								<inputType id="nvcc.compiler.input.cpp.1711380972" superClass="nvcc.compiler.input.cpp"/>
								<inputType id="nvcc.compiler.input.c.957058888" superClass="nvcc.compiler.input.c"/>
							</tool>
							<tool id="nvcc.linker.base.405403255" name="NVCC Linker" superClass="nvcc.linker.base">
								<option id="nvcc.linker.option.libs.1741709378" name="Libraries (-l)" superClass="nvcc.linker.option.libs" valueType="libs">
									<listOptionValue builtIn="false" value="gomp"/>
								</option>
								<option id="nvcc.linker.option.other.1249447379" name="Other options (-Xlinker [option])" superClass="nvcc.linker.option.other"/>
								<inputType id="nvcc.linker.input.628238572" superClass="nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.base.1709303400" name="NVCC Archiver" superClass="nvcc.archiver.base"/>
							<tool id="com.nvidia.host.assembler.85766732" name="Host Assembler" superClass="com.nvidia.host.assembler">
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.1075074740" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="com.nvidia.cuda.ide.build.project.ICudaProjectConfiguration">
				<executable devicelink="false">
					<sass major="2" minor="0"/>
					<sass major="3" minor="5"/>
					<ptx major="2" minor="0"/>
					<sass major="2" minor="1"/>
					<sass major="3" minor="0"/>
					<sass major="3" minor="2"/>
					<sass major="3" minor="7"/>
					<sass major="5" minor="0"/>
					<sass major="5" minor="2"/>
					<sass major="5" minor="3"/>
				</executable>
				<editor-arch major="2" minor="0"/>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="com.nvidia.cuda.ide.configuration.release.2025130750">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.ide.configuration.release.2025130750" moduleId="org.eclipse.cdt.core.settings" name="Release">
				<externalSettings/>
				<extensions>
					<extension id="nvcc.errorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.VCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="com.nvidia.cuda.ide.cubin" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.elf" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.macho" point="org.eclipse.cdt.core.BinaryParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release,org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe" cleanCommand="rm -rf" description="" id="com.nvidia.cuda.ide.configuration.release.2025130750" name="Release" parent="com.nvidia.cuda.ide.configuration.release">
					<folderInfo id="com.nvidia.cuda.ide.configuration.release.2025130750." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.ide.toolchain.exe.release.1470070320" name="CUDA Toolkit 7.0" resourceTypeBasedDiscovery="true" superClass="com.nvidia.cuda.ide.toolchain.exe.release">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform.1249086146" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<builder buildPath="${workspace_loc:/mcx}/Release" id="com.nvidia.cuda.ide.builder.2060793962" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit 7.0 Builder" superClass="com.nvidia.cuda.ide.builder"/>
							<tool command="nvcc" id="nvcc.compiler.base.2083914878" name="NVCC Compiler" superClass="nvcc.compiler.base">
								<option id="nvcc.compiler.deviceDebug.1062426329" name="Generate device debug information (-G)" superClass="nvcc.compiler.deviceDebug"/>
								<option id="nvcc.compiler.option.level.320242070" name="Generate host debug information (-g)" superClass="nvcc.compiler.option.level"/>
								<option defaultValue="nvcc.compiler.optimization.level.most" id="nvcc.compiler.optimization.level.112026402" name="Optimization Level" superClass="nvcc.compiler.optimization.level" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.856648376" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic"/>
								<option id="nvcc.compiler.compileroptions.1254665288" name="Preprocessor options (-Xcompiler)" superClass="nvcc.compiler.compileroptions" valueType="stringList">
									<listOptionValue builtIn="false" value="-fopenmp"/>
									<listOptionValue builtIn="false" value="-Wall"/>
								</option>
								<option id="nvcc.compiler.def.symbols.1915897687" name="Defined symbols (-D)" superClass="nvcc.compiler.def.symbols" valueType="definedSymbols">
									<listOptionValue builtIn="false" value="USE_ATOMIC"/>
									<listOptionValue builtIn="false" value="MCX_TARGET_NAME=&quot;Fermi MCX&quot;"/>
									<listOptionValue builtIn="false" value="USE_CACHEBOX"/>
									<listOptionValue builtIn="false" value="SAVE_DETECTORS"/>
									<listOptionValue builtIn="false" value="USE_XORSHIFT128P_RAND"/>
								</option>
								<option id="nvcc.compiler.option.lineinfo.787303324" name="Generate line-number information for device code (-lineinfo)" superClass="nvcc.compiler.option.lineinfo" value="true" valueType="boolean"/>
								<option id="nvcc.compiler.usefastmath.1897065878" name="Make use of fast math library (-use_fast_math)" superClass="nvcc.compiler.usefastmath" value="true" valueType="boolean"/>
								<inputType id="nvcc.compiler.input.cu.647224970" superClass="nvcc.compiler.input.cu"/>
								<inputType id="nvcc.compiler.input.cpp.1223897469" superClass="nvcc.compiler.input.cpp"/>
								<inputType id="nvcc.compiler.input.c.546169381" superClass="nvcc.compiler.input.c"/>
							</tool>
							<tool id="nvcc.linker.base.94352938" name="NVCC Linker" superClass="nvcc.linker.base">
								<option id="nvcc.linker.option.libs.1531659718" name="Libraries (-l)" superClass="nvcc.linker.option.libs" valueType="libs">
									<listOptionValue builtIn="false" value="gomp"/>
								</option>
								<option id="nvcc.linker.option.other.1703492422" name="Other options (-Xlinker [option])" superClass="nvcc.linker.option.other"/>
								<inputType id="nvcc.linker.input.213482673" superClass="nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.base.1509264584" name="NVCC Archiver" superClass="nvcc.archiver.base"/>
							<tool id="com.nvidia.host.assembler.1630755481" name="Host Assembler" superClass="com.nvidia.host.assembler">
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.602600116" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="com.nvidia.cuda.ide.build.project.ICudaProjectConfiguration">
				<executable devicelink="false">
					<sass major="5" minor="0"/>
					<ptx major="2" minor="0"/>
					<sass major="2" minor="0"/>
					<sass major="2" minor="1"/>
					<sass major="3" minor="0"/>
					<sass major="3" minor="2"/>
					<sass major="3" minor="5"/>
					<sass major="3" minor="7"/>
					<sass major="5" minor="2"/>
					<sass major="5" minor="3"/>
				</executable>
				<editor-arch major="2" minor="0"/>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
	</storageModule>
	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
		<project id="mcx.com.nvidia.cuda.ide.exe.1061425769" name="Executable" projectType="com.nvidia.cuda.ide.exe"/>
	</storageModule>
	<storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
	<storageModule moduleId="refreshScope" versionNumber="2">
		<configuration configurationName="Release">
			<resource resourceType="PROJECT" workspacePath="/mcx"/>
		</configuration>
		<configuration configurationName="Debug">
			<resource resourceType="PROJECT" workspacePath="/mcx"/>
		</configuration>
	</storageModule>
	<storageModule moduleId="scannerConfiguration">
		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.debug.174618745;com.nvidia.cuda.ide.configuration.debug.174618745.;nvcc.compiler.base.351071117;nvcc.compiler.input.cpp.1711380972">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.release.2025130750;com.nvidia.cuda.ide.configuration.release.2025130750.;nvcc.compiler.base.2083914878;nvcc.compiler.input.cpp.1223897469">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.debug.174618745;com.nvidia.cuda.ide.configuration.debug.174618745.;nvcc.compiler.base.351071117;nvcc.compiler.input.c.957058888">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.debug.174618745;com.nvidia.cuda.ide.configuration.debug.174618745.;nvcc.compiler.base.351071117;nvcc.compiler.input.cu.1644416546">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.release.2025130750;com.nvidia.cuda.ide.configuration.release.2025130750.;nvcc.compiler.base.2083914878;nvcc.compiler.input.cu.647224970">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.release.2025130750;com.nvidia.cuda.ide.configuration.release.2025130750.;nvcc.compiler.base.2083914878;nvcc.compiler.input.c.546169381">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
	</storageModule>
</cproject>
